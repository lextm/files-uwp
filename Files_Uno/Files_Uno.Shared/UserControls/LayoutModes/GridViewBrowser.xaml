<local:BaseLayout
    x:Class="Files.GridViewBrowser"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Files"
    xmlns:local2="using:Files.Filesystem"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    NavigationCacheMode="Required"
    PointerPressed="GridViewBrowserViewer_PointerPressed"
    PointerWheelChanged="BaseLayout_PointerWheelChanged"
    mc:Ignorable="d">
    <local:BaseLayout.Resources>
        <MenuFlyout x:Key="BaseLayoutContextFlyout">
            <MenuFlyoutSubItem
                x:Key="SortByEmptySpace"
                x:Uid="BaseLayoutContextFlyoutSortBy"
                Text="Sort by">
                <MenuFlyoutSubItem.Icon>
                    <FontIcon Glyph="&#xE8CB;" />
                </MenuFlyoutSubItem.Icon>
                <!--<muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByName"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind AssociatedViewModel.IsSortedByName, Mode=TwoWay}"
                    Text="Name" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByDate"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind AssociatedViewModel.IsSortedByDate, Mode=TwoWay}"
                    Text="Date modified" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByType"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind AssociatedViewModel.IsSortedByType, Mode=TwoWay}"
                    Text="Type" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortBySize"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind AssociatedViewModel.IsSortedBySize, Mode=TwoWay}"
                    Text="Size" />-->
                <MenuFlyoutSeparator />
                <!--<muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByAscending"
                    GroupName="SortOrderGroup"
                    IsChecked="{x:Bind AssociatedViewModel.IsSortedAscending, Mode=TwoWay}"
                    Text="Ascending" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByDescending"
                    GroupName="SortOrderGroup"
                    IsChecked="{x:Bind AssociatedViewModel.IsSortedDescending, Mode=TwoWay}"
                    Text="Descending" />-->
            </MenuFlyoutSubItem>
            <MenuFlyoutItem
                x:Key="RefreshEmptySpace"
                x:Uid="BaseLayoutContextFlyoutRefresh"
                Click="{Binding Refresh_Click}"
                Text="Refresh">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE72C;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Key="PasteEmptySpace"
                x:Uid="BaseLayoutContextFlyoutPaste"
                Click="{Binding PasteItem_ClickAsync}"
                IsEnabled="{Binding PSIsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Text="Paste">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE77F;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Key="OpenTerminal"
                x:Uid="BaseLayoutContextFlyoutOpenInTerminal"
                Click="{Binding OpenDirectoryInTerminal}"
                IsEnabled="True"
                Text="Open in Terminal...">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE756;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutSubItem
                x:Key="NewEmptySpace"
                x:Uid="BaseLayoutContextFlyoutNew"
                Text="New">
                <MenuFlyoutSubItem.Icon>
                    <FontIcon Glyph="&#xE710;" />
                </MenuFlyoutSubItem.Icon>
                <MenuFlyoutItem
                    x:Key="NewFolder"
                    x:Uid="BaseLayoutContextFlyoutNewFolder"
                    Click="{Binding NewFolder_Click}"
                    Text="Folder">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE8B7;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator />
                <MenuFlyoutItem
                    x:Key="NewBitmapImage"
                    x:Uid="BaseLayoutContextFlyoutNewBitmapImage"
                    Click="{Binding NewBitmapImage_Click}"
                    Text="Bitmap Image">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xEB9F;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem
                    x:Key="NewTextDocument"
                    x:Uid="BaseLayoutContextFlyoutNewTextDocument"
                    Click="{Binding NewTextDocument_Click}"
                    Text="Text Document">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE8A5;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyoutSubItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Key="PropertiesFolder"
                x:Uid="BaseLayoutContextFlyoutPropertiesFolder"
                Click="{Binding ShowFolderPropertiesButton_Click}"
                Text="Properties">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE946;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="BaseLayoutItemContextFlyout" Opening="{Binding RightClickContextMenu_Opening}">
            <MenuFlyoutItem
                x:Key="UnzipItem"
                x:Uid="BaseLayoutItemContextFlyoutExtract"
                x:Load="False"
                Click="{Binding ExtractItems_Click}"
                Tag="Extract_FlyoutItem"
                Text="Extract">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xED25;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Key="OpenItem"
                x:Uid="BaseLayoutItemContextFlyoutOpenItem"
                x:Load="False"
                Click="{Binding OpenItem_Click}"
                Tag="Open_FlyoutItem"
                Text="Open">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE7AC;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Key="OpenInNewTab"
                x:Uid="BaseLayoutItemContextFlyoutOpenInNewTab"
                x:Load="False"
                Click="{Binding OpenDirectoryInNewTab_Click}"
                Tag="OpenTab_FlyoutItem"
                Text="Open in new tab">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE737;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Key="OpenInNewWindowItem"
                x:Uid="BaseLayoutItemContextFlyoutOpenInNewWindow"
                x:Load="False"
                Click="{Binding OpenInNewWindowItem_Click}"
                Tag="OpenWindow_FlyoutItem"
                Text="Open in new window">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE8A7;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Key="SetAsDesktopBackgroundItem"
                x:Uid="BaseLayoutItemContextFlyoutSetAsDesktopBackground"
                Click="{Binding SetAsDesktopBackgroundItem_Click}"
                Text="Set as desktop background"
                Visibility="{Binding IsSelectedItemImage, Mode=OneWay}">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE7F4;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Key="SetAsLockscreenBackgroundItem"
                x:Uid="BaseLayoutItemContextFlyoutSetAsLockscreenBackground"
                Click="{Binding SetAsLockscreenBackgroundItem_Click}"
                Text="Set as lockscreen background"
                Visibility="{Binding IsSelectedItemImage, Mode=OneWay}">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xEE3F;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Key="ShareItem"
                x:Uid="BaseLayoutItemContextFlyoutShare"
                Click="{Binding ShareItem_Click}"
                Text="Share">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE72D;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Key="CutItem"
                x:Uid="BaseLayoutItemContextFlyoutCut"
                Click="{Binding CutItem_Click}"
                Text="Cut">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE8C6;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Key="CopyItem"
                x:Uid="BaseLayoutItemContextFlyoutCopy"
                Click="{Binding CopyItem_ClickAsync}"
                Text="Copy">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE8C8;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Key="DeleteItem"
                x:Uid="BaseLayoutItemContextFlyoutDelete"
                Click="{Binding DeleteItem_Click}"
                Text="Delete">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE74D;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Key="RenameItem"
                x:Uid="BaseLayoutItemContextFlyoutRename"
                Click="{Binding RenameItem_Click}"
                Text="Rename">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE8AC;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Key="SidebarPinItem"
                x:Uid="BaseLayoutItemContextFlyoutPinToSidebar"
                x:Load="False"
                Click="{Binding PinItem_Click}"
                Tag="PinItem_FlyoutItem"
                Text="Pin to sidebar">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Pin" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Key="PropertiesItem"
                x:Uid="BaseLayoutItemContextFlyoutProperties"
                Click="{Binding ShowPropertiesButton_Click}"
                Text="Properties">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE946;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Key="QuickLook"
                x:Uid="BaseLayoutItemContextFlyoutQuickLook"
                Click="{Binding ToggleQuickLook}"
                Text="QuickLook"
                Visibility="{Binding IsQuickLookEnabled}">
                <MenuFlyoutItem.Icon>
                    <BitmapIcon UriSource="ms-appx:///Assets/QuickLook/quicklook_icon_black.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <DataTemplate x:Key="GridViewBrowserTemplate" x:DataType="local2:ListedItem">
            <Grid
                Width="{Binding GridViewSize, Mode=OneWay}"
                Height="Auto"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                DataContext="{x:Bind}"
                DataContextChanged="FileListGridItem_DataContextChanged"
                EffectiveViewportChanged="Grid_EffectiveViewportChanged"
                IsRightTapEnabled="True"
                PointerPressed="FileListGridItem_PointerPressed"
                RightTapped="StackPanel_RightTapped"
                Tag="ItemRoot"
                ToolTipService.ToolTip="{x:Bind ItemName}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Tag="ItemImage">
                    <Grid
                        x:Name="Picture"
                        Height="{Binding GridViewSize, Mode=OneWay}"
                        HorizontalAlignment="Stretch"
                        Padding="12"
                        VerticalAlignment="Bottom"
                        Width="{Binding GridViewSize, Mode=OneWay}"
                        x:Load="{x:Bind LoadFileIcon, Mode=OneWay}">
                        <Image Source="{x:Bind FileImage, Mode=OneWay}" Stretch="Uniform" />
                    </Grid>
                    <Image
                        x:Name="FolderGlyph"
                        Height="{Binding GridViewSize, Mode=OneWay}"
                        HorizontalAlignment="Stretch"
                        Stretch="Uniform"
                        VerticalAlignment="Stretch"
                        Width="{Binding GridViewSize, Mode=OneWay}"
                        x:Load="{x:Bind LoadFolderGlyph}">
                        <Image.Source>
                            <SvgImageSource
                                RasterizePixelHeight="638"
                                RasterizePixelWidth="900"
                                UriSource="/Assets/FolderIconLarge.svg" />
                        </Image.Source>
                    </Image>
                    <Grid
                        x:Name="TypeUnknownGlyph"
                        Height="{Binding GridViewSize, Mode=OneWay}"
                        HorizontalAlignment="Stretch"
                        Padding="12"
                        VerticalAlignment="Stretch"
                        Width="{Binding GridViewSize, Mode=OneWay}"
                        x:Load="{x:Bind LoadUnknownTypeGlyph, Mode=OneWay}">
                        <Viewbox MaxWidth="{Binding GridViewSize, Mode=OneWay}" MaxHeight="{Binding GridViewSize, Mode=OneWay}">
                            <SymbolIcon Symbol="Page2" />
                        </Viewbox>
                    </Grid>
                </Grid>
                <StackPanel Grid.Row="1">
                    <TextBlock
                        Margin="0,0,0,10"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        HorizontalTextAlignment="Center"
                        Text="{x:Bind ItemName}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap" />
                    <TextBox
                        Margin="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Text="{x:Bind ItemName}"
                        TextAlignment="Center"
                        TextWrapping="Wrap"
                        Visibility="Collapsed" />
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TilesBrowserTemplate" x:DataType="local2:ListedItem">
            <Grid
                Width="250"
                Height="100"
                Margin="0,0,0,0"
                Padding="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                DataContext="{x:Bind}"
                DataContextChanged="FileListGridItem_DataContextChanged"
                EffectiveViewportChanged="Grid_EffectiveViewportChanged"
                IsRightTapEnabled="True"
                PointerPressed="FileListGridItem_PointerPressed"
                RightTapped="StackPanel_RightTapped"
                Tag="ItemRoot"
                ToolTipService.ToolTip="{x:Bind ItemName}">
                <StackPanel Orientation="Horizontal">
                    <Grid
                        Height="Auto"
                        MinHeight="100"
                        Width="100"
                        Tag="ItemImage">
                        <Grid
                            x:Name="Picture"
                            Padding="0,12,0,12"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            x:Load="{x:Bind LoadFileIcon, Mode=OneWay}"
                            Width="74">
                            <Image Source="{x:Bind FileImage, Mode=OneWay}" Stretch="Uniform" />
                        </Grid>
                        <Image
                            x:Name="FolderGlyph"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            x:Load="{x:Bind LoadFolderGlyph}"
                            Stretch="Uniform"
                            Width="74"
                            Height="74">
                            <Image.Source>
                                <SvgImageSource
                                    RasterizePixelHeight="128"
                                    RasterizePixelWidth="128"
                                    UriSource="/Assets/FolderIcon.svg"/>
                            </Image.Source>
                        </Image>
                        <Grid
                            x:Name="TypeUnknownGlyph"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            x:Load="{x:Bind LoadUnknownTypeGlyph, Mode=OneWay}"
                            Width="74">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <FontIcon
                                    FontFamily="Segoe MDL2 Assets"
                                    FontSize="74"
                                    Glyph="&#xE7C3;" />
                            </Grid>
                        </Grid>
                    </Grid>
                    <Grid
                        Height="100"
                        Width="150">
                        <StackPanel
                            VerticalAlignment="Center"
                            Height="Auto">
                            <TextBlock
                                Margin="0,0,10,0"
                                HorizontalAlignment="Left"
                                TextAlignment="Left"
                                Text="{x:Bind ItemName}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="Wrap"
                                Width="140"
                                Height="Auto"
                                MaxHeight="50"
                                ScrollViewer.VerticalScrollBarVisibility="Auto" />
                            <TextBox
                                Margin="0,0,10,0"
                                HorizontalAlignment="Left"
                                Text="{x:Bind ItemName}"
                                TextAlignment="Left"
                                TextWrapping="Wrap"
                                Width="140"
                                Visibility="Collapsed"
                                Height="Auto"
                                MaxHeight="50"
                                ScrollViewer.VerticalScrollBarVisibility="Auto" />
                            <TextBlock
                                HorizontalAlignment="Left"
                                TextAlignment="Left"
                                Text="{x:Bind ItemType}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap" />
                            <TextBlock
                                HorizontalAlignment="Left"
                                TextAlignment="Left"
                                Text="{x:Bind FileSize}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap" />
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </Grid>
        </DataTemplate>

    </local:BaseLayout.Resources>

    <Grid
        Padding="0,0,0,0"
        VerticalAlignment="Stretch"
        ContextFlyout="{StaticResource BaseLayoutContextFlyout}">
        <Grid.KeyboardAccelerators>
            <KeyboardAccelerator
                Key="{x:Bind plusKey}"
                Invoked="{Binding GridViewSizeIncrease_}"
                Modifiers="Control" />
            <KeyboardAccelerator
                Key="{x:Bind minusKey}"
                Invoked="{Binding GridViewSizeDecrease_}"
                Modifiers="Control" />
            <KeyboardAccelerator
                Key="Add"
                Invoked="{Binding GridViewSizeIncrease_}"
                Modifiers="Control" />
            <KeyboardAccelerator
                Key="Subtract"
                Invoked="{Binding GridViewSizeDecrease_}"
                Modifiers="Control" />
        </Grid.KeyboardAccelerators>
        <ProgressBar
            Name="ProgBar"
            Height="10"
            VerticalAlignment="Top"
            Background="Transparent"
            IsIndeterminate="True"
            Visibility="{x:Bind AssociatedViewModel.LoadIndicator.IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock
            x:Name="EmptyText"
            x:Uid="EmptyFolder"
            Grid.Row="3"
            Margin="0,125,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Canvas.ZIndex="0"
            Text="This folder is empty."
            TextWrapping="Wrap"
            Visibility="{x:Bind AssociatedViewModel.EmptyTextState.IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        <GridView
            x:Name="FileList"
            Margin="14,14,14,0"
            VerticalContentAlignment="Stretch"
            x:FieldModifier="public"
            AllowDrop="True"
            DoubleTapped="{Binding List_ItemClick}"
            DragOver="List_DragOver"
            Drop="List_Drop"
            IsDoubleTapEnabled="True"
            ItemsSource="{x:Bind AssociatedViewModel.FilesAndFolders}"
            PreviewKeyDown="FileList_PreviewKeyDown"
            SelectionChanged="FileList_SelectionChanged"
            SelectionMode="Extended">
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="ContextFlyout" Value="{StaticResource BaseLayoutItemContextFlyout}" />
                </Style>
            </GridView.ItemContainerStyle>
        </GridView>
    </Grid>
</local:BaseLayout>